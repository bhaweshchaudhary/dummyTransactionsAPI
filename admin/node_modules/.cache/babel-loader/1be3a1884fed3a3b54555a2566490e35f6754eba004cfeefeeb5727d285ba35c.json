{"ast":null,"code":"var _jsxFileName = \"/Users/bhawesh/Developments/PriyaProject/admin/src/components/BarChart.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { Bar } from \"react-chartjs-2\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BarChart = ({\n  month\n}) => {\n  _s();\n  const [barData, setBarData] = useState([]);\n  useEffect(() => {\n    fetchBarData();\n  }, [month]);\n  const fetchBarData = async () => {\n    try {\n      const response = await axios.get(`http://localhost:3000/api/bar-chart`, {\n        params: {\n          month\n        }\n      });\n      setBarData(response.data);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  const data = {\n    labels: barData.map(item => item.range),\n    datasets: [{\n      label: \"Number of Items\",\n      data: barData.map(item => item.count),\n      backgroundColor: \"rgba(75, 192, 192, 0.2)\",\n      borderColor: \"rgba(75, 192, 192, 1)\",\n      borderWidth: 1\n    }]\n  };\n  return /*#__PURE__*/_jsxDEV(Bar, {\n    data: data\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 10\n  }, this);\n};\n_s(BarChart, \"95clpMumGM2pmqWtKGnx+m6/6Zo=\");\n_c = BarChart;\nexport default BarChart;\nvar _c;\n$RefreshReg$(_c, \"BarChart\");","map":{"version":3,"names":["React","useState","useEffect","Bar","axios","jsxDEV","_jsxDEV","BarChart","month","_s","barData","setBarData","fetchBarData","response","get","params","data","error","console","labels","map","item","range","datasets","label","count","backgroundColor","borderColor","borderWidth","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/bhawesh/Developments/PriyaProject/admin/src/components/BarChart.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Bar } from \"react-chartjs-2\";\nimport axios from \"axios\";\n\nconst BarChart = ({ month }) => {\n  const [barData, setBarData] = useState([]);\n\n  useEffect(() => {\n    fetchBarData();\n  }, [month]);\n\n  const fetchBarData = async () => {\n    try {\n      const response = await axios.get(`http://localhost:3000/api/bar-chart`, {\n        params: { month },\n      });\n      setBarData(response.data);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const data = {\n    labels: barData.map((item) => item.range),\n    datasets: [\n      {\n        label: \"Number of Items\",\n        data: barData.map((item) => item.count),\n        backgroundColor: \"rgba(75, 192, 192, 0.2)\",\n        borderColor: \"rgba(75, 192, 192, 1)\",\n        borderWidth: 1,\n      },\n    ],\n  };\n\n  return <Bar data={data} />;\n};\n\nexport default BarChart;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,GAAG,QAAQ,iBAAiB;AACrC,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,QAAQ,GAAGA,CAAC;EAAEC;AAAM,CAAC,KAAK;EAAAC,EAAA;EAC9B,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAE1CC,SAAS,CAAC,MAAM;IACdU,YAAY,CAAC,CAAC;EAChB,CAAC,EAAE,CAACJ,KAAK,CAAC,CAAC;EAEX,MAAMI,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC/B,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMT,KAAK,CAACU,GAAG,CAAC,qCAAqC,EAAE;QACtEC,MAAM,EAAE;UAAEP;QAAM;MAClB,CAAC,CAAC;MACFG,UAAU,CAACE,QAAQ,CAACG,IAAI,CAAC;IAC3B,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;IACtB;EACF,CAAC;EAED,MAAMD,IAAI,GAAG;IACXG,MAAM,EAAET,OAAO,CAACU,GAAG,CAAEC,IAAI,IAAKA,IAAI,CAACC,KAAK,CAAC;IACzCC,QAAQ,EAAE,CACR;MACEC,KAAK,EAAE,iBAAiB;MACxBR,IAAI,EAAEN,OAAO,CAACU,GAAG,CAAEC,IAAI,IAAKA,IAAI,CAACI,KAAK,CAAC;MACvCC,eAAe,EAAE,yBAAyB;MAC1CC,WAAW,EAAE,uBAAuB;MACpCC,WAAW,EAAE;IACf,CAAC;EAEL,CAAC;EAED,oBAAOtB,OAAA,CAACH,GAAG;IAACa,IAAI,EAAEA;EAAK;IAAAa,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AAC5B,CAAC;AAACvB,EAAA,CAhCIF,QAAQ;AAAA0B,EAAA,GAAR1B,QAAQ;AAkCd,eAAeA,QAAQ;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}